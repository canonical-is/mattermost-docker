FROM ubuntu:focal

# Some ENV variables
ENV MM_VERSION=5.22.1
ENV PATH="/mattermost/bin:${PATH}"

# Build argument to set Mattermost edition
ARG edition=enterprise
ARG PUID=2000
ARG PGID=2000
ARG MM_BINARY=


# Install some needed packages
RUN apt-get -qy update && \
    apt-get -qy dist-upgrade && \
    apt-get -qy install curl jq libcap2-bin

RUN mkdir -p /mattermost/data /mattermost/plugins /mattermost/client/plugins && \
    if [ ! -z "$MM_BINARY" ] ; then \
        curl $MM_BINARY | tar -xvz ; \
    elif [ "$edition" = "team" ] ; then \
        curl https://releases.mattermost.com/$MM_VERSION/mattermost-team-$MM_VERSION-linux-amd64.tar.gz | tar -xvz ; \
    else \
        curl https://releases.mattermost.com/$MM_VERSION/mattermost-$MM_VERSION-linux-amd64.tar.gz | tar -xvz ; \
    fi && \
    cp /mattermost/config/config.json /config.json.save && \
    rm -f /mattermost/config/config.json && \
    addgroup --gid ${PGID} mattermost && \
    adduser --no-create-home --disabled-password --gecos "" --uid ${PUID} --gid ${PGID} --home /mattermost mattermost && \
    chown -R mattermost:mattermost /mattermost /config.json.save && \
    setcap cap_net_bind_service=+ep /mattermost/bin/mattermost

USER mattermost

#Healthcheck to make sure container is ready
HEALTHCHECK CMD curl --fail http://localhost:8000 || exit 1

# Configure entrypoint and command
COPY entrypoint.sh /
ENTRYPOINT ["/entrypoint.sh"]
WORKDIR /mattermost
CMD ["mattermost"]

# Expose port 8000 of the container
EXPOSE 8000

# Declare volumes for mount point directories
VOLUME ["/mattermost/data", "/mattermost/logs", "/mattermost/config", "/mattermost/plugins", "/mattermost/client/plugins"]
